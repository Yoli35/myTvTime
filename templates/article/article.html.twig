{% extends 'base.html.twig' %}
{% set user = app.user %}
{% block title %}myTvTime::{{ 'Blog'|trans }}{% endblock %}

{% block body %}
    <div class="container">

        {{ include('blocks/_mainMenu.html.twig') }}

        {{ include('blocks/_nav.html.twig', {thisPage: article.title, parent: {url: path('app_blog'), page: 'Blog'|trans}}) }}

        <div class="blog">
            <div class="body">
                <div class="article" data-id="{{ article.id }}">
                    {% if article.banner %}
                        <div class="banner full" style="background-image: url('/images/articles/banners/{{ article.banner }}')">
                            {% if article.thumbnail %}
                                <div class="thumbnail" style="background-image: url('/images/articles/thumbnails/{{ article.thumbnail }}')"></div>
                            {% endif %}
                        </div>
                    {% else %}
                        <div class="banner no-banner" style="background-image: url('/images/articles/banners/{{ article.banner }}')">
                            {% if article.thumbnail %}
                                <div class="thumbnail" style="background-image: url('/images/articles/thumbnails/{{ article.thumbnail }}')"></div>
                            {% endif %}
                        </div>
                    {% endif %}
                    <div class="wrapper">
                        <div class="presentation">
                            <div class="title-author">
                                <div class="title">{{ article.title }}</div>
                                {% if user and article.user.id == user.id %}
                                    <div class="author">{{ 'By myself'|trans }}</div>
                                {% else %}
                                    <div class="author">{{ 'By'|trans }} {{ article.user.username?:article.user.email }}</div>
                                {% endif %}
                            </div>
                            <div class="dates">
                                <div class="date" title="{{ article.createdAt|format_datetime() }}">{{ 'Created'|trans }} : {{ article.createdAt|ago }}</div>
                                <div class="date" title="{{ article.updatedAt|format_datetime() }}">{{ 'Updated'|trans }} : {{ article.updatedAt|ago }}</div>
                                <div class="date" title="{{ article.publishedAt|format_datetime() }}">{{ 'Published'|trans }} : {{ article.publishedAt|ago }}</div>
                            </div>
                            <div class="content">{{ content|raw|nl2br }}</div>
                        </div>
                    </div>
                    {% if is_granted("ROLE_USER") %}
                        <div class="comment-form">
                            {% if comments is empty %}
                                <div class="label">{{ 'Be the first to react!'|trans }}</div>
                            {% else %}
                                <div class="label">{{ 'React!'|trans }} :</div>
                            {% endif %}
                            <div class="user">
                                {% if user.avatar %}
                                    <img src="/images/users/avatars/{{ user.avatar }}" alt="{{ user.username?:user.email }}">
                                {% endif %}
                                <div class="name">{{ user.username?:user.email }}</div>
                            </div>
                            <div>
                                {{ form_start(form) }}
                                {{ form_errors(form) }}

                                {{ form_row(form.text) }}

                                {{ form_row(form.submit, { 'label': 'Add' }) }}
                                {{ form_end(form) }}
                            </div>
                        </div>
                    {% endif %}
                    {% if comments is not empty %}
                        <div class="comments">
                            <div class="label">{{ 'Comments'|trans }} :</div>
                            {% for comment in comments %}
                                <div class="comment">
                                    {{ include('blocks/article/_reaction.html.twig', {reaction: comment}) }}
                                    {% if comment.answers is not empty %}
                                        <div class="reactions" id="reactions-{{ comment.id }}">
                                            {% for answer in comment.answers %}
                                                <div class="reaction">
                                                    {{ include('blocks/article/_reaction.html.twig', {reaction: answer}) }}
                                                </div>
                                            {% endfor %}
                                        </div>
                                    {% endif %}
                                    {% if is_granted("ROLE_USER") %}
                                        <div class="react">
                                            <details>
                                                <summary>{{ 'Answer'|trans }}</summary>
                                                <div class="answer">
                                                    <div class="user">
                                                        {% if user.avatar %}
                                                            <img src="/images/users/avatars/{{ user.avatar }}" alt="{{ user.username?:user.email }}">
                                                        {% endif %}
                                                        <div class="name">{{ user.username?:user.email }}</div>
                                                    </div>
                                                    <label>
                                                        <textarea id="answer-{{ comment.id }}" data-id="{{ comment.id }}"></textarea></label>
                                                    <div class="submit" id="add-{{ comment.id }}" data-id="{{ comment.id }}">{{ 'Add'|trans }}</div>
                                                </div>
                                            </details>
                                        </div>
                                    {% endif %}
                                </div>
                            {% endfor %}
                        </div>
                    {% endif %}
                </div>
                <div class="article-tools" id="{{ article.id }}">
                    {% if article.id in userArticleIds %}
                        <a href="{{ path('app_blog_edit', {id: article.id}) }}">
                            <div class="edit-article"><i class="fa-solid fa-pen-to-square"></i> {{ 'Edit article'|trans }}</div>
                        </a>
                        <div class="delete-article"><i class="fa-solid fa-trash-can"></i> {{ 'Delete article'|trans }}</div>
                    {% endif %}
                </div>
            </div>
        </div>

        {{ include('blocks/_pageFooter.html.twig') }}

    </div>

    <dialog class="confirm-deletion">
        <div class="overlay">
            <div class="header">
                {{ 'Delete this article?'|trans }}
                <div class="close"><i class="fa-solid fa-xmark"></i></div>
            </div>
            <div class="content">
                {{ 'Do you really want to delete this article?'|trans }}
                <span></span>
                {{ 'This operation is final and cannot be cancelled.'|trans }}
            </div>
            <div class="footer">
                <button value="nope" class="btn btn-secondary delete-cancel">{{ 'Cancel'|trans }}</button>
                <button value="yass" class="btn btn-danger delete-done">{{ 'Delete'|trans }}</button>
            </div>
        </div>
    </dialog>
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script>
        let path = "{{ path('app_blog_article_add_answer', {cid: 0}) }}";
        const _app_blog_article_add_answer = path.substring(0, path.length - 1);
        const locale = "{{ app.request.locale }}";
        let confirmDialog;
        let diaporamaIndex, diaporamaCount, diaporamaSrc;

        window.addEventListener("DOMContentLoaded", () => {

            // document.querySelector(".edit-article").addEventListener("click", editArticle);
            document.querySelector(".delete-article").addEventListener("click", deleteArticle);

            const dialog = document.querySelector(".confirm-deletion");
            confirmDialog = dialog;
            dialog.querySelector(".delete-done").addEventListener("click", () => {
                closeDialog(dialog, true);
            })
            dialog.querySelector(".delete-cancel").addEventListener("click", () => {
                closeDialog(dialog, false);
            })
            dialog.querySelector(".close").addEventListener('click', function () {
                closeDialog(dialog, false);
            });

            const images = document.querySelector(".article").querySelectorAll("img")
            images.forEach(image => {
                image.addEventListener("click", openDiaporama);
            });

            const submits = document.querySelectorAll(".submit");

            submits.forEach(submit => {
                submit.addEventListener("click", () => {
                    const comment_id = submit.getAttribute("data-id");
                    const textarea = document.querySelector("#answer-" + comment_id);

                    const xhr = new XMLHttpRequest();
                    xhr.onload = function () {
                        const data = this.response;

                        const reactions = document.querySelector("#reactions-" + comment_id);
                        const reaction = document.createElement("div");
                        const even = reactions.querySelectorAll(".reaction").length % 2;

                        reaction.classList.add("reaction");
                        if (!even) {
                            reaction.classList.add("odd");
                        }
                        reaction.innerHTML = data;
                        reactions.appendChild(reaction);
                        textarea.value = "";
                        textarea.focus();
                    }
                    xhr.open("GET", _app_blog_article_add_answer + comment_id + '?text=' + textarea.value);
                    xhr.send();
                })
            })
        })

        function editArticle(evt) {
            const id = evt.currentTarget.parentElement.getAttribute("id");
            console.log('edit', {id});
            evt.preventDefault();
            window.location.href = "{{ path('app_blog_edit', {id: article.id}) }}";
        }

        function deleteArticle(evt) {
            const id = evt.currentTarget.parentElement.getAttribute("id");
            console.log('delete', {id});
            evt.preventDefault();
            openDialog(confirmDialog, id, evt.currentTarget);
        }

        function openDialog(dialog, id) {
            const title = document.querySelector(".title");
            dialog.querySelector("span").innerHTML = title.innerHTML;
            dialog.setAttribute("data-id", id);

            if (typeof dialog.showModal === "function") {
                dialog.showModal();
                setTimeout(() => {
                    dialog.classList.add("show")
                }, 0);
            } else {
                console.error("L'API <dialog> n'est pas prise en charge par ce navigateur.");
            }
        }

        function closeDialog(dialog, deleteArticle) {
            let deletedId = parseInt(dialog.getAttribute("data-id"));
            dialog.removeAttribute("data-id");
            dialog.classList.remove("show");
            setTimeout(() => {
                dialog.close()
            }, 300);
            if (deleteArticle) {
                const xhr = new XMLHttpRequest();
                xhr.onload = function () {
                    window.location.href = "/" + locale + "/blog";
                }
                xhr.open("GET", "/" + locale + "/blog/delete/" + deletedId);
                xhr.send();
            }
        }

        function openDiaporama(e) {
            const images = document.querySelector(".article").querySelector(".wrapper").querySelectorAll("img");
            const count = images.length;
            let prevDiv, nextDiv;
            const srcArray = Array.from(images, image => {
                return image.getAttribute("src")
            });

            diaporamaIndex = 0;
            diaporamaCount = count;
            diaporamaSrc = srcArray;

            const backDiapo = document.createElement("div");
            backDiapo.classList.add("back-diapo");
            const wrapperDiv = document.createElement("div");
            wrapperDiv.classList.add("wrapper");
            const imageDiv = document.createElement("div");
            imageDiv.classList.add("image");
            backDiapo.appendChild(wrapperDiv);
            wrapperDiv.appendChild(imageDiv);
            let thumbnails
            if (count > 1) {
                thumbnails = document.createElement("div");
                thumbnails.classList.add("thumbnails");
                wrapperDiv.appendChild(thumbnails);
            }
            document.querySelector("body").appendChild(backDiapo);
            document.body.style.overflow = 'hidden';

            const closeDiv = document.createElement("div");
            closeDiv.classList.add("close");
            const crossDiv = document.createElement("div");
            closeDiv.appendChild(crossDiv);
            closeDiv.addEventListener("click", closeDiaporama);
            crossDiv.innerHTML = '<i class="fa-solid fa-xmark"></i>';
            if (count > 1) {
                prevDiv = document.createElement("div");
                prevDiv.classList.add("chevron");
                nextDiv = document.createElement("div");
                nextDiv.classList.add("chevron");
                prevDiv.innerHTML = '<i class="fa-solid fa-chevron-left"></i>';
                nextDiv.innerHTML = '<i class="fa-solid fa-chevron-right"></i>';
            }

            const imageSrc = e.currentTarget.getAttribute("src");
            const imgDiv = document.createElement("img");
            imgDiv.setAttribute("src", imageSrc);

            if (count > 1) {
                srcArray.forEach((src, index) => {
                    const thumbnail = document.createElement("div");
                    thumbnail.classList.add("thumbnail");
                    thumbnail.setAttribute("data-index", index.toString());
                    if (src === imageSrc) {
                        thumbnail.classList.add("active");
                        diaporamaIndex = index;
                    }
                    const img = document.createElement("img");
                    img.setAttribute("src", src);
                    thumbnail.appendChild(img);
                    thumbnail.addEventListener("click", gotoImage);
                    thumbnails.appendChild(thumbnail);
                });
                prevDiv.addEventListener("click", prevImage);
                nextDiv.addEventListener("click", nextImage);
            }

            document.addEventListener("keydown", getKey);

            backDiapo.appendChild(closeDiv);
            if (count > 1) imageDiv.appendChild(prevDiv);
            imageDiv.appendChild(imgDiv);
            if (count > 1) imageDiv.appendChild(nextDiv);

            setTimeout(() => {
                imgDiv.classList.add("fade");
            }, 0);
            backDiapo.style.bottom = -window.scrollY + "px";
            backDiapo.style.top = window.scrollY + "px";
        }

        function nextImage() {
            thumbnailDeactivate(diaporamaIndex);
            diaporamaIndex = (diaporamaIndex + 1) % diaporamaCount;
            thumbnailActivate(diaporamaIndex);
            const img = document.querySelector(".back-diapo").querySelector(".image").querySelector("img");
            img.setAttribute("src", diaporamaSrc[diaporamaIndex]);
        }

        function prevImage() {
            thumbnailDeactivate(diaporamaIndex);
            diaporamaIndex = (diaporamaIndex + (diaporamaCount - 1)) % diaporamaCount;
            thumbnailActivate(diaporamaIndex);
            const img = document.querySelector(".back-diapo").querySelector(".image").querySelector("img");
            img.setAttribute("src", diaporamaSrc[diaporamaIndex]);
        }

        function gotoImage(e) {
            thumbnailDeactivate(diaporamaIndex);
            diaporamaIndex = parseInt(e.currentTarget.getAttribute("data-index"));
            thumbnailActivate(diaporamaIndex);
            const img = document.querySelector(".back-diapo").querySelector(".image").querySelector("img");
            img.setAttribute("src", diaporamaSrc[diaporamaIndex]);
        }

        function thumbnailDeactivate(index) {
            const selector = '.thumbnail[data-index="' + index + '"]'
            const thumbnail = document.querySelector(selector);
            thumbnail.classList.remove("active");
        }

        function thumbnailActivate(index) {
            const selector = '.thumbnail[data-index="' + index + '"]'
            const thumbnail = document.querySelector(selector);
            thumbnail.classList.add("active");
        }

        function closeDiaporama() {
            const backDiapo = document.querySelector(".back-diapo");
            const imgDiv = backDiapo.querySelector("img");

            if (diaporamaCount > 1) {
                for (let i = 0; i < diaporamaCount; i++) {
                    const selector = '.thumbnail[data-index="' + i + '"]'
                    const thumbnail = document.querySelector(selector);
                    thumbnail.removeEventListener("click", gotoImage);
                }
                const prevDiv = document.querySelector(".back-diapo").querySelector(".fa-chevron-left").parentElement;
                const nextDiv = document.querySelector(".back-diapo").querySelector(".fa-chevron-right").parentElement;
                prevDiv.removeEventListener("click", prevImage);
                nextDiv.removeEventListener("click", nextImage);
            }
            document.removeEventListener("keydown", getKey);
            document.body.style.overflow = 'unset';
            setTimeout(() => {
                imgDiv.classList.remove("fade");
            }, 0);
            setTimeout(() => {
                document.querySelector("body").removeChild(backDiapo);
            }, 300);
        }

        function getKey(e) {
            if (e.key === "ArrowLeft") {
                if (diaporamaCount > 1) prevImage();
            } else if (e.key === "ArrowRight") {
                if (diaporamaCount > 1) nextImage();
            } else if (e.key === "Escape") {
                closeDiaporama();
            }
        }
    </script>
{% endblock %}