{% extends 'base.html.twig' %}

{% block title %}
    {% if from == 'popular' %}
        MyTvTime::{{ 'Popular Series'|trans }}
    {% elseif from == 'top_rated' %}
        MyTvTime::{{ 'Top rated Series'|trans }}
    {% elseif from == 'airing_today' %}
        MyTvTime::{{ 'Series Airing Today'|trans }}
    {% elseif from == 'on_the_air' %}
        MyTvTime::{{ 'Series On The Air'|trans }}
    {% elseif from == 'latest' %}
        MyTvTime::{{ 'Latest Series'|trans }}
    {% endif %}
{% endblock %}

{% block body %}
    {{ include('blocks/pageHeader.html.twig') }}
    <div class="container">
        <div class="my-series">
            <div class="header">
                {% if from == 'popular' %}
                    <h1>{{ 'Popular Series'|trans }}</h1>
                {% elseif from == 'top_rated' %}
                    <h1>{{ 'Top rated Series'|trans }}</h1>
                {% elseif from == 'airing_today' %}
                    <h1>{{ 'Series Airing Today'|trans }}</h1>
                {% elseif from == 'on_the_air' %}
                    <h1>{{ 'Series On The Air'|trans }}</h1>
                {% elseif from == 'latest' %}
                    <h1>{{ 'Latest Series'|trans }}</h1>
                {% endif %}
                <div class="backdrop"></div>
            </div>

            {% if from == 'popular' %}
                {{ include('blocks/nav.html.twig', {thisPage: 'Popular Series'}) }}
            {% elseif from == 'top_rated' %}
                {{ include('blocks/nav.html.twig', {thisPage: 'Top rated Series'}) }}
            {% elseif from == 'airing_today' %}
                {{ include('blocks/nav.html.twig', {thisPage: 'Series Airing Today'}) }}
            {% elseif from == 'on_the_air' %}
                {{ include('blocks/nav.html.twig', {thisPage: 'Series On The Air'}) }}
            {% elseif from == 'latest' %}
                {{ include('blocks/nav.html.twig', {thisPage: 'Latest Series'}) }}
            {% endif %}

            <main>
                <div class="series">
                    <div class="series-tools mobile">
                        <div class="pages mobile">
                            {{ include('blocks/serie/pagination-popular.html.twig') }}
                        </div>
                    </div>
                    <div class="wrapper">
                        {% for serie in series %}
                            {{ include('blocks/serie/card-popular.html.twig') }}
                        {% endfor %}
                    </div>
                    <div class="series-tools">
                        <div class="pages">
                            {{ include('blocks/serie/pagination-popular.html.twig') }}
                        </div>
                        <div class="search-serie">
                            <h2>{{ 'Search'|trans }}</h2>

                            {#                            <label class="label" for="new_serie">{{ 'New Serie Id'|trans }}</label> #}
                            {#                            <div class="group"> #}
                            {#                                <div class="field"> #}
                            {#                                    <input id="new_serie" type="text" value=""> #}
                            {#                                </div> #}
                            {#                                <div> #}
                            {#                                    <button id="add_serie" type="submit">{{ 'Add'|trans }}</button> #}
                            {#                                </div> #}
                            {#                            </div> #}
                            {#                            <div class="help"> #}
                            {#                                <details> #}
                            {#                                    <summary><span class="label">{{ 'Help'|trans }}</span></summary> #}
                            {#                                    <div> #}
                            {#                                        <img src="https://www.themoviedb.org/assets/2/v4/logos/v2/blue_short-8e7b30f73a4020692ccca9c88bafe5dcb6f8a62a4c6bc55cd9ba82bb2cd95f6c.svg" alt="The Movie Database (TMDB)" width="154" height="20"><br> #}
                            {#                                        {{ 'New Serie Help'|trans({ #}
                            {#                                            '%link1%': '<a href="https://www.themoviedb.org" target="_blank">The Movie Db site <i class="fa-solid fa-paperclip"></i></a>', #}
                            {#                                            '%link2%': '<a href="https://www.themoviedb.org/tv/4607-lost" target="_blank">https://www.themoviedb.org/tv/4607-lost</a>', #}
                            {#                                            '%id%': '4607'})|raw }} #}
                            {#                                    </div> #}
                            {#                                </details> #}
                            {#                            </div> #}
                        </div>
                    </div>
                    <div class="new-serie-preview">
                        <div class="message">
                            <div class="content"></div>
                            <div class="close"><i class="fa-solid fa-circle-xmark"></i></div>
                        </div>
                        <div class="wrapper"></div>
                    </div>
                </div>
            </main>
        </div>
        {{ include('blocks/pageFooter.html.twig') }}
    </div>
{% endblock %}
{% block morejs %}
    <script>
        const _app_serie_new = "{{ path('app_serie_new') }}";
        const _current_page = {{ pages.page }};
        const _per_page = {{ pages.per_page }};
        const _from = "{{ from }}";

        window.addEventListener("DOMContentLoaded", () => {

            // initSettings();
            initPreview();
            newPopularSerie();
            initHeader();
        })

        function initHeader() {
            let ticking = false;
            setH1();
            window.addEventListener('resize', setH1);

            window.addEventListener('scroll', () => {
                if (!ticking) {
                    window.requestAnimationFrame(function () {
                        setH1();
                        ticking = false;
                    });
                }
                ticking = true;
            });

        }

        function setH1() {
            const header = document.querySelector(".header");
            const h1 = document.querySelector("h1");
            let left, ratio, top;
            ratio = (header.clientHeight - window.scrollY) / header.clientHeight;
            left = (header.clientWidth - h1.clientWidth) / 2;
            top = ((header.clientHeight + window.scrollY) - h1.clientHeight) / 2;
            if (ratio < 0) ratio = 0;
            if (ratio > 1) ratio = 1;
            h1.setAttribute("style", "left: " + left.toString() + "px; top: " + top.toString() + "px; opacity: " + ratio + "; transform: scale(" + (1 + (5 * (1 - ratio))) + ")");
        }

        function initPreview() {

            const preview = document.querySelector(".new-serie-preview");
            const close = preview.querySelector(".close");

            preview.addEventListener("click", dismissPreview);
            close.addEventListener("click", dismissPreview);
        }

        function dismissPreview() {
            const preview = document.querySelector(".new-serie-preview");
            const message = preview.querySelector(".message").querySelector(".content");
            const wrapper = preview.querySelector(".wrapper");

            setTimeout(() => {
                preview.classList.remove("visible");
            }, 0);
            wrapper.innerHTML = "";
            message.innerHTML = "";
        }

        function newPopularSerie() {
            document.querySelectorAll(".add").forEach(add => {
                add.addEventListener("click", addPopularSerie);
            })
        }

        function addPopularSerie(evt) {
            const addButton = evt.currentTarget;
            let value = addButton.getAttribute("data-id");

            evt.preventDefault();

            const xhr = new XMLHttpRequest();
            xhr.onload = function () {
                let data = {
                    'serie': '',
                    'status': '',
                    'response': '',
                    'id': '',
                    'card': {},
                    'pagination': {}
                };
                if (this.response.slice(0, 1) === '<') {
                    data = this.response;
                } else {
                    data = JSON.parse(this.response);
                    if (data.status === 'Ok') {
                        const preview = document.querySelector(".new-serie-preview");
                        const message = preview.querySelector(".message").querySelector(".content");
                        const wrapper = preview.querySelector(".wrapper");

                        wrapper.innerHTML = data.card.content;

                        if (data.response === "New") {
                            message.innerHTML = "{{ 'New serie added'|trans }}";
                        }
                        if (data.response === "Update") {
                            message.innerHTML = "{{ 'Serie updated'|trans }}";
                        }
                        setTimeout(() => {
                            preview.classList.add("visible");
                        }, 0);

                        addButton.classList.remove("add");
                        addButton.classList.add("seen");
                        addButton.innerHTML = "<i class=\"fa-solid fa-eye\"></i>"
                    }

                    if (data.status === "Ko") {
                        alert("{{ 'Serie not found'|trans }} (ID: " + data.id + ")");
                    }
                }
                console.log({data});
            }
            xhr.open("GET", _app_serie_new + '?value=' + value + "&p=" + _current_page + "&from=" + _from);
            xhr.send();
        }
    </script>
{% endblock %}