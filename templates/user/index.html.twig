{% extends 'base.html.twig' %}

{% block title %}myTvTime ▶ ︎{{ 'People search'|trans }}{% endblock %}

{% block body %}
    <div class="container">
        {{ include('blocks/_mainMenu.html.twig') }}

        <div class="user-account">

            {{ include('blocks/user/_banner.html.twig', {locale: app.request.locale}) }}

            {{ include('blocks/_nav.html.twig', {thisPage: 'People search'|trans}) }}

            <main>
                <div class="user-search">
                    <div class="wrapper">
                        {{ include('blocks/_uc.html.twig', {index: 0}) }}
                        <div class="users">
                            <div class="search-bar">
                                <div class="magnifying-glass"><i class="fa-solid fa-magnifying-glass"></i></div>
                                <label>
                                    <input id="search" type="search">
                                </label>
                                <button type="submit" class="btn btn-primary">{{ 'Search'|trans }}</button>
                                <div>{{ users|length }} {{ 'users'|trans }}</div>
                            </div>
                            {% for u in users %}
                                <div class="user{% if u==user %} myself{% endif %}">
                                    <div class="thumbnail"><img src="{{ getPath('userAvatar')~u.avatar }}" alt="{{ u.username }}" loading="lazy"></div>
                                    <div class="username">{{ u.username }}
                                        {% if u==user %}
                                            <div class="self">({{ 'yourself'|trans }})</div>
                                        {% endif %}
                                    </div>
                                    {% if u!=user %}
                                        {% if isFriend(u.id, friends) %}
                                            <div class="relation">{{ 'friend'|trans }}
                                                <div class="delete"><i class="fa-solid fa-xmark"></i></div>
                                            </div>
                                        {% else %}
                                            {% set situation = isPending(user, u) %}
                                            {% if situation==1 %} {# pending request #}
                                                <div class="pending" data-id="{{ u.id }}">{{ 'pending'|trans }}</div>
                                            {% endif %}
                                            {% if situation==0 %} {# declined request #}
                                                <div class="request" data-id="{{ u.id }}">{{ 'request'|trans }}</div>
                                                <div class="pending d-none" data-id="{{ u.id }}">{{ 'pending'|trans }}</div>
                                            {% endif %}
                                        {% endif %}
                                    {% endif %}
                                </div>
                            {% endfor %}
                        </div>
                        {{ include('blocks/_uc.html.twig', {index: 1}) }}
                    </div>
                </div>
            </main>
        </div>

        {{ include('blocks/_pageFooter.html.twig') }}

    </div>
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script>
        let _app_personal_friend_new = "{{ path('app_personal_friend_new', {ownerId: 0, recipientId: 0})[:-3] }}";

        window.addEventListener("DOMContentLoaded", () => {
            const searchInput = document.querySelector("#search");
            searchInput.focus();
            const requests = document.querySelectorAll(".request");
            requests.forEach(request => {
                request.addEventListener("click", requestFriendship);
            });
            animate();
        });

        function requestFriendship(evt) {
            const request = evt.currentTarget;
            const id = request.getAttribute("data-id");

            const xhr = new XMLHttpRequest();
            xhr.onload = function () {
                const user = request.closest(".user");
                const pending = user.querySelector(".pending");
                user.removeChild(request);
                pending.classList.remove("d-none");
            }
            xhr.open("GET", _app_personal_friend_new + {{ user.id }} +'/' + id);
            xhr.send();
        }

        function animate() {
            const underConstructions = document.querySelectorAll(".under-construction");
            let ticking = [];
            underConstructions?.forEach(uc => {
                uc.style.backgroundPositionX = "0px";
                let index = uc.getAttribute("data-index");
                ticking[index] = false;

                setInterval(() => {
                    if (!ticking[index]) {
                        window.requestAnimationFrame(function () {
                            let X = uc.style.backgroundPositionX;
                            let px = X.substring(0, X.length - 2);
                            uc.style.backgroundPositionX = (parseInt(px) + 1) + "px";

                            ticking[index] = false;
                        });
                    }
                    ticking[index] = true;
                }, 60);
            });
        }
    </script>
{% endblock %}