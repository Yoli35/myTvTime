{% extends 'base.html.twig' %}

{% block title %}{{ 'my TvTime' }}{% endblock %}
{% set user = app.user %}
{% block morecss %}
{% endblock %}
{% block body %}
    {#    {% if app.debug=='dev' %}{{ dump() }}{% endif %} #}
    <div class="container">

        {{ include('blocks/pageHeader.html.twig') }}

        <div class="user-account">

            {{ include('blocks/user/banner.html.twig') }}

            {{ include('blocks/nav.html.twig', {thisPage: 'My Movies'}) }}

            <div class="user-movies">
                <h1 style="font-weight: 100" id="h1" data-total-results="{{ count }}">
                    {{ 'Watched Films'|trans }} : {{ count > 0 ? count : 'None'|trans }}
                </h1>

                <h4>{{ 'Time spent watching TV:'|trans }}
                    {{ runtime.total }}
                    {{ 'minutes'|trans }}
                    {{ 'i.e.'|trans }}
                    {% if runtime.years > 1 %}{{ runtime.years }} {{ 'years'|trans }}{% endif %}
                    {% if runtime.years == 1 %}{{ runtime.years }} {{ 'year'|trans }}{% endif %}
                    {% if runtime.months > 1 %}{{ runtime.months }} {{ 'months'|trans }}{% endif %}
                    {% if runtime.months == 1 %}{{ runtime.months }} {{ 'month'|trans }}{% endif %}
                    {% if runtime.days > 1 %}{{ runtime.days }} {{ 'days'|trans }}{% endif %}
                    {% if runtime.days == 1 %}{{ runtime.days }} {{ 'day'|trans }}{% endif %}
                    {% if runtime.hours > 1 %}{{ runtime.hours }} {{ 'hours'|trans }}{% endif %}
                    {% if runtime.hours == 1 %}{{ runtime.hours }} {{ 'hour'|trans }}{% endif %}
                    {{ 'and'|trans }}
                    {% if runtime.minutes > 1 %}{{ runtime.minutes }} {{ 'minutes'|trans }}{% endif %}
                    {% if runtime.minutes < 2 %}{{ runtime.minutes }} {{ 'minute'|trans }}{% endif %}
                </h4>

                <div class="search-block">
                    {{ component('user_movie_search', {class: 'search', id: user.id, poster_url: imageConfig.url, poster_size: imageConfig.poster_sizes.3}) }}
                    <div class="export">
                        <div class="btn-group" role="group" aria-label="Basic example">
                            <button type="button" id="export-button" class="btn btn-secondary" name="export-list" data-bs-toggle="modal" data-bs-target="#exportModal">{{ 'Export'|trans }}</button>
                            <button type="button" id="append-button" class="btn btn-secondary" name="append-list" data-bs-toggle="modal" data-bs-target="#appendModal">{{ 'Append'|trans }}</button>
                        </div>
                    </div>

                </div>

                <div class="pinned-collection hide mini">
                    <h4></h4>
                    <div class="wrapper"></div>
                </div>

                <div class="home-discovers">
                    <div id="content" class="content">
                        {% for discover in discovers %}
                            {% set poster = imageConfig.url ~ imageConfig.poster_sizes.3 ~ discover.poster_path %}
                            {{ include('blocks/movie/discover.html.twig', { title: discover.title, poster: poster, id: discover.movie_db_id, route: 'app_movie' }) }}
                        {% endfor %}
                    </div>
                </div>
            </div>
        </div>

        {{ include('blocks/pageFooter.html.twig') }}

    </div>

    <div class="nav-to-top"></div>

    <div class="modal fade" id="exportModal" tabindex="-1">
        <div class="modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">{{ 'Export'|trans }}</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="export-result"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">{{ 'Close'|trans }}</button>
                    <button id="export-file" type="button" class="btn btn-primary"><a href="#" download="" id="json-link">{{ 'Download'|trans }} <i class="bi bi-file-arrow-down"></i></a></button>
                    <button id="export-copy" type="button" class="btn btn-primary">{{ 'Copy'|trans }} <i class="bi bi-clipboard2-plus"></i></button>
                </div>
            </div>
        </div>
    </div>
    <dialog class="append-modal fade" id="appendModal" tabindex="-1">
        <div class="movies-dialog">
            <div class="header">
                {{ 'Append'|trans }}
                <button value="nope" class="close"><i class="fa-solid fa-circle-xmark"></i></button>
            </div>
            <div class="content">
                <label for="json" class="form-label">{{ 'Select a Movie List File (.json)'|trans }}</label>
                <input type="file" id="json" name="json" accept="application/json" class="form-control form-control-sm">
                <div class="append-infos"></div>
                <div class="append-result"></div>
            </div>
            <div class="footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">{{ 'Close'|trans }}</button>
                <button id="append-add" type="button" class="btn btn-primary" disabled>{{ 'Add'|trans }} <i class="bi bi-download"></i></button>
            </div>
            <div class="append-progress">
                <div class="progress">
                    <div class="label">{{ 'Progress'|trans }} :</div>
                    <div class="bar">
                        <div class="value"></div>
                    </div>
                </div>
            </div>
        </div>
    </dialog>
{% endblock %}
{% block morejs %}
    <script src="/js/movie.js"></script>
    <script src="/js/user-movie.js"></script>
    <script>
        const paths = [
            "{{ path('profile_infos') }}",
            "{{ path('imdb_infos') }}",
            "{{ path('app_movie_add') }}",
            "{{ path('app_movie_remove') }}",
            "{{ path('app_movie_get_rating') }}",
            "{{ path('app_movie_set_rating') }}",
        ];
        window.addEventListener("DOMContentLoaded", () => {
            initButtons(
                    {{ user.id }},
                "{{ locale }}",
                [
                    "{{ path('app_personal_movies_export') }}",
                    "{{ path('app_json_ids') }}",
                    "{{ path('app_personnel_movie_add') }}",
                    "{{ path('app_json_cleanup') }}",
                    "{{ path('app_json_sample') }}",
                    "{{ path('app_movie', {id: 0}) }}",
                    "{{ path('app_personal_movies_more') }}",
                    "{{ path('app_collection_display', {id: 0}) }}"
                ],
                "{{ imageConfig.url ~ imageConfig.poster_sizes.3 }}",
            );
            let _app_personal_movie_collection = "{{ path('app_personal_movie_collection', {id: 1}) }}";
            let _app_movie = "{{ path('app_movie', {id:0}) }}";
            let url = "{{ imageConfig.url ~ imageConfig.poster_sizes.3 }}";
            document.querySelector('.choose-collection').querySelector('select').addEventListener("change", getCollection);
            document.querySelector('.choose-collection').querySelector('input').addEventListener("change", showHideCollection);

            function getCollection(evt) {
                const collectionId = evt.target.value;
                const pinned = document.querySelector(".pinned-collection");

                if (collectionId > 0) {
                    const xhr = new XMLHttpRequest();
                    xhr.onload = function () {
                        const body = document.querySelector("body");
                        const wrapper = document.querySelector(".pinned-collection").querySelector(".wrapper");
                        wrapper.innerHTML = "";
                        let data = JSON.parse(this.response);
                        console.log({data});
                        pinned.querySelector("h4").innerHTML = data.title;
                        data.movies.forEach((item = {id: 0, title: "", original_title: "", poster_path: "", movie_db_id: 0, release_date: "", runtime: 0, description: ""}) => {
                            let a = document.createElement("a");
                            a.setAttribute("href", _app_movie.substring(0, _app_movie.length - 1) + item.movie_db_id);
                            let movie = document.createElement("div");
                            movie.classList.add("movie");
                            movie.setAttribute("data-id", item.id.toString());
                            let img = document.createElement("img");
                            img.setAttribute("src", url + item.poster_path);
                            img.setAttribute("alt", item.title);
                            let title = document.createElement("div");
                            title.classList.add("title");
                            title.appendChild(document.createTextNode(item.title));

                            movie.appendChild(img);
                            movie.appendChild(title);
                            // movie.addEventListener("mouseover", showAbout);
                            // movie.addEventListener("mouseout", hideAbout);
                            movie.addEventListener("mouseenter", showAbout);
                            movie.addEventListener("mouseleave", hideAbout);
                            a.appendChild(movie);
                            wrapper.appendChild(a);

                            img = document.createElement("img");
                            img.setAttribute("src", url + item.poster_path);
                            img.setAttribute("alt", item.title);

                            let about = document.createElement("div");
                            about.classList.add("about-pinned-movie", "hide");
                            about.setAttribute("data-id", item.id.toString());
                            let content = document.createElement("div");
                            content.classList.add("content");
                            content.appendChild(img);
                            let infos = document.createElement("div");
                            infos.classList.add("infos");
                            title = document.createElement("h4");
                            title.appendChild(document.createTextNode(item.title));
                            infos.appendChild(title);
                            let info = document.createElement("div");
                            let dateT = item.release_date + 'T00:00:00';
                            let released = new Date(dateT);
                            const options = {year: 'numeric', month: 'numeric', day: 'numeric'};
                            info.appendChild(document.createTextNode(txt.movie.release_date[_locale] + ' :\n' + released.toLocaleDateString(undefined, options)));
                            infos.appendChild(info);
                            info = document.createElement("div");
                            info.appendChild(document.createTextNode(txt.movie.original_title[_locale] + ' : ' + item.original_title));
                            infos.appendChild(info);
                            info = document.createElement("div");
                            info.appendChild(document.createTextNode(txt.movie.runtime[_locale] + ' : ' + item.runtime + ' ' + txt.movie.minutes[_locale]));
                            info = document.createElement("div");
                            info.appendChild(document.createTextNode(item.description));
                            infos.appendChild(info);
                            content.appendChild(infos);
                            let shade = document.createElement("div");
                            shade.classList.add("shade");
                            content.appendChild(shade);
                            about.appendChild(content);

                            body.appendChild(about);
                        });

                        if (pinned.classList.contains("hide")) {
                            pinned.classList.remove("hide");
                            setTimeout(() => {
                                pinned.classList.remove("mini");
                            }, 0);
                            setTimeout(() => {
                                pinned.classList.add("show");
                            }, 0);
                            document.querySelector('.choose-collection').querySelector('input').checked = true;
                        }
                    }
                    xhr.open("GET", _app_personal_movie_collection.substring(0, _app_personal_movie_collection.length - 1) + collectionId);
                    xhr.send();
                } else {
                    if (pinned.classList.contains("show")) {
                        pinned.classList.remove("show");
                        setTimeout(() => {
                            pinned.classList.add("mini");
                        }, 0);
                        setTimeout(() => {
                            pinned.classList.add("hide");
                        }, 300);
                    }
                    document.querySelector('.choose-collection').querySelector('input').checked = false;
                }
            }

            function showAbout(evt) {
                const body = document.querySelector("body");
                const width = body.clientWidth;
                const middleX = width / 2;
                const movie = evt.target;
                // let movie;
                //
                // if (evt.target.classList.contains("movie"))
                //     movie = evt.target;
                // else
                //     movie = evt.target.closest(".movie");
                //
                // evt.preventDefault();

                const id = movie.getAttribute("data-id");
                const selector = '.about-pinned-movie[data-id="' + id + '"]';
                const about = document.querySelector(selector);
                let style, x, y = evt.pageY + 20;

                if (evt.pageX < middleX) {
                    x = evt.pageX - 288;
                    x = x < 16 ? 16 : x;
                    style = "left: " + x + "px;"
                } else {
                    x = width - (evt.pageX + 288);
                    x = x < 16 ? 16 : x;
                    style = "left: unset; right: " + x + "px;"
                }

                about.setAttribute("style", style + " top: " + y + "px;");
                about.classList.remove("hide");
                about.classList.add("show");
            }

            function hideAbout(evt) {
                const movie = evt.target;
                // let movie;
                //
                // if (evt.target.classList.contains("movie"))
                //     movie = evt.target;
                // else
                //     movie = evt.target.closest(".movie");
                //
                // evt.preventDefault();

                const id = movie.getAttribute("data-id");
                const selector = '.about-pinned-movie[data-id="' + id + '"]';
                const about = document.querySelector(selector);

                about.classList.remove("show");
                setTimeout(() => {
                    about.classList.add("hide");
                    about.removeAttribute("style");
                }, 300);
            }

            function showHideCollection() {
                const pinned = document.querySelector(".pinned-collection");

                if (pinned.classList.contains("show")) {
                    pinned.classList.remove("show");
                    setTimeout(() => {
                        pinned.classList.add("mini");
                    }, 0);
                    setTimeout(() => {
                        pinned.classList.add("hide");
                    }, 300);
                } else {
                    pinned.classList.remove("hide");
                    setTimeout(() => {
                        pinned.classList.remove("mini");
                    }, 0);
                    setTimeout(() => {
                        pinned.classList.add("show");
                    }, 0);
                }
            }

            initMovieStuff(paths, "", "{{ locale }}");
        })
    </script>
{% endblock %}

