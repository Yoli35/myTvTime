{% extends 'base.html.twig' %}

{% block title %}{{ 'my TvTime' }}{% endblock %}
{% set user = app.user %}

{% block body %}
{#    {% if app.debug=='dev' %}{{ dump() }}{% endif %}#}
    <div class="container">

        {{ include('blocks/pageHeader.html.twig') }}

        <nav aria-label="{{ 'Navigation'|trans }}" style="--bs-breadcrumb-divider: '◦';">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="{{ path('app_home') }}">{{ 'Homepage'|trans }}</a></li>
                <li class="breadcrumb-item active" aria-current="{{ 'My Movies'|trans }}">{{ 'My Movies'|trans }}</li>
            </ol>
        </nav>

        <div class="user-account">

            {{ include('blocks/user_account/banner.html.twig') }}

            <div class="user-movies">
                <h1>{{ 'Watched Films'|trans }} : {{ discovers|length ? discovers|length : 'None'|trans }}</h1>

                <h4>{{ 'Time spent watching TV:'|trans }}
                    {{ runtime.total }}
                    {{ 'minutes'|trans }}
                    {{ 'i.e.'|trans }}
                    {% if runtime.years > 1 %}{{ runtime.years }} {{ 'years'|trans }}{% endif %}
                    {% if runtime.years == 1 %}{{ runtime.years }} {{ 'year'|trans }}{% endif %}
                    {% if runtime.months > 1 %}{{ runtime.months }} {{ 'months'|trans }}{% endif %}
                    {% if runtime.months == 1 %}{{ runtime.months }} {{ 'month'|trans }}{% endif %}
                    {% if runtime.days > 1 %}{{ runtime.days }} {{ 'days'|trans }}{% endif %}
                    {% if runtime.days == 1 %}{{ runtime.days }} {{ 'day'|trans }}{% endif %}
                    {% if runtime.hours > 1 %}{{ runtime.hours }} {{ 'hours'|trans }}{% endif %}
                    {% if runtime.hours == 1 %}{{ runtime.hours }} {{ 'hour'|trans }}{% endif %}
                    {{ 'and'|trans }}
                    {% if runtime.minutes > 1 %}{{ runtime.minutes }} {{ 'minutes'|trans }}{% endif %}
                    {% if runtime.minutes < 2 %}{{ runtime.minutes }} {{ 'minute'|trans }}{% endif %}
                </h4>

                <div class="search-block">
                    {{ component('user_movie_search', {class: 'search', id: user.id, poster_url: imageConfig.url, poster_size: imageConfig.poster_sizes.3}) }}
                    <div class="export">
                        <div class="btn-group" role="group" aria-label="Basic example">
                            <button type="button" id="export-button" class="btn btn-secondary" data-id="{{ user.id }}" name="export-list">{{ 'Export'|trans }}</button>
                            <button type="button" id="append-button" class="btn btn-secondary" data-id="{{ user.id }}" name="append-list">{{ 'Append'|trans }}</button>
                        </div>
                    </div>

                </div>

                <div class="home-discovers">
                    <div class="content">
                        {% for discover in discovers %}
                            {% set poster = imageConfig.url ~ imageConfig.poster_sizes.3 ~ discover.poster_path %}
                            {{ include('blocks/movie/discover.html.twig', { title: discover.title, poster: poster, id: discover.movie_db_id}) }}
                        {% endfor %}
                    </div>
                </div>
            </div>
        </div>

        {{ include('blocks/pageFooter.html.twig') }}

    </div>

    <div class="modal fade" id="exportModal" tabindex="-1">
        <div class="modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">{{ 'Export'|trans }}</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="export-result"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">{{ 'Close'|trans }}</button>
                    <button id="export-file" type="button" class="btn btn-primary"><a href="#" download="" id="json-link">{{ 'Download'|trans }} <i class="bi bi-file-arrow-down"></i></a></button>
                    <button id="export-copy" type="button" class="btn btn-primary">{{ 'Copy'|trans }} <i class="bi bi-clipboard2-plus"></i></button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="appendModal" tabindex="-1">
        <div class="modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable">
            <div class="modal-content position-relative">
                <div class="modal-header">
                    <h5 class="modal-title">{{ 'Append'|trans }}</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <label for="json" class="form-label">{{ 'Select a Movie List File (.json)' }}</label>
                    <input type="file" id="json" name="json" accept="application/json" class="form-control form-control-sm">
                    <div class="append-infos"></div>
                    <div class="append-result"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">{{ 'Close'|trans }}</button>
                    <button id="append-add" type="button" class="btn btn-primary" disabled>{{ 'Add'|trans }} <i class="bi bi-download"></i></button>
                </div>
                <div class="append-progress">
                    <div class="progress">
                        <div class="label">{{ 'Progress'|trans }} :</div>
                        <div class="bar">
                            <div class="value"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}
{% block morejs %}
    <script type="module">
        // import { Modal } from '../../../node_modules/bootstrap';

        $(function () {
            let json, ids, preview, infos, exportFile;
            let user_id = {{ user.id }};

            $('#export-button').click(function () {
                let id = $(this).data('id');
                let exportModal = $('#exportModal');
                let result = $('.modal-body').find('.export-result');
                let count, movies, url, file, sample, result_item;
                let locale = '{{ locale }}';
                let txt = {
                    'aria_select_group': {'fr': 'Boutons de sélection', 'en': 'Selection buttons', 'de': 'Auswahlknöpfe', 'es': 'Botones de selección'},
                    'aria_select_all': {'fr': 'Tout sélectionner', 'en': 'Select all', 'de': 'Alle auswählen', 'es': 'Seleccionar todo'},
                    'aria_deselect_all': {'fr': 'Tout désélectionner', 'en': 'Deselect all', 'de': 'Alles abwählen', 'es': 'De seleccionar todo'},
                    'select_all': {'fr': 'Tout sélectionner', 'en': 'Select all', 'de': 'Alle auswählen', 'es': 'Seleccionar todo'},
                    'deselect_all': {'fr': 'Tout désélectionner', 'en': 'Deselect all', 'de': 'Alles abwählen', 'es': 'De seleccionar todo'},
                    '': {'fr': '', 'en': '', 'de': '', 'es': ''},
                }

                $.ajax({
                    url: "{{ path('app_personal_movies_export') }}",
                    method: 'GET',
                    data: {id: id},
                    success: function (data) {
                        count = data['count'];
                        movies = data['movies'];
                        json = data['json'];
                        url = data['url'];
                        file = data['file'];
                        sample = data['sample'];

                        $('#json-link').attr({'href': url + file, 'download': file});

                        $(result).empty();
                        $(result).append('<div class="sample">' + sample + '</div>');
                        $(result).append(
                            '<div class="selection">' +
                            '   <div class="btn-group btn-group-sm" role="group" aria-label="' + txt.aria_select_group[locale] + '">' +
                            '       <button type="button" id="export-select" class="btn btn-secondary" aria-label="' + txt.aria_select_all[locale] + '">' + txt.select_all[locale] + '</button>' +
                            '       <button type="button" id="export-deselect" class="btn btn-secondary" aria-label="' + txt.aria_deselect_all[locale] + '">' + txt.deselect_all[locale] + '</button>' +
                            '   </div>' +
                            '</div>');

                        for (let i = 0; i < count; i++) {
                            $(result).append('<div class="result-item" data-movie-id="' + movies[i]['movie_db_id'] + '">' + movies[i]['title'] + '</div>')
                        }

                        // new Modal('#exportModal').show();
                        $(exportModal).css('background-color', 'rgba(189,115,189,0.75)');
                        $(exportModal).css('display', 'block');
                        $(exportModal).css('opacity', '1');

                        exportFile = file;

                        result_item = $('.result-item');

                        $(result_item).click(function () {
                            $(this).toggleClass("active");
                            updateSample($(result_item));
                        })

                        $('#export-select').click(function () {
                            $(result_item).addClass("active");
                            updateSample($(result_item));
                        })

                        $('#export-deselect').click(function () {
                            $(result_item).removeClass("active");
                            updateSample($(result_item));
                        })

                        let exportCloseButtons = $(exportModal).find('button[data-bs-dismiss="modal"]');
                        $(exportCloseButtons).click(function () {
                            $(exportModal).css('opacity', '0');
                            setTimeout(function (){
                                $(exportModal).css('display', 'none');
                            }, 150)

                            $.ajax({
                                url: "{{ path('app_json_cleanup') }}",
                                method: 'GET',
                                data: {filename: exportFile},
                                success: function (data) {
                                    console.log(data['result'])
                                }
                            })
                        })
                    }
                })
            })
            $('#export-copy').click(function () {
                let string = JSON.stringify(json, null, '\t');
                navigator.clipboard.writeText(json).then(function () {
                    /* presse-papiers modifié avec succès */
                    alert('Copied! (' + string.length + ' caractères)')
                }, function () {
                    /* échec de l’écriture dans le presse-papiers */
                    alert('Rejected!')
                }).catch(err => alert(err));
            })
            $('#append-button').click(function () {
                preview = $('.append-result');
                infos = $('.append-infos');
                $(preview).empty();
                $(infos).empty();
                $(infos).css('padding', '0');

                $.ajax({
                    url: "{{ path('app_json_ids') }}",
                    method: 'GET',
                    success: function (data) {
                        ids = data['movie_ids'];
                    }
                })
                let appendModal = $('#appendModal');
                $(appendModal).css('transition', 'background-color .45s');
                $(appendModal).css('display', 'unset');
                $(appendModal).css('opacity', '1');
                $(appendModal).css('background-color', 'rgba(189,115,189,0.25)');
                let appendCloseButtons = $(appendModal).find('button[data-bs-dismiss="modal"]');
                $(appendCloseButtons).click(function () {
                    $(appendModal).css('opacity', '0');
                    setTimeout(function (){
                        $(appendModal).css('display', 'none');
                    }, 150)
                })
            })
            $('input[name="json"]').change(function () {
                let json, content, count = 0;
                let add = $('#append-add');
                let url = "{{ imageConfig.url ~ imageConfig.poster_sizes.3 }}";
                let fr = new FileReader();
                let locale = '{{ locale }}';
                let txt = {
                    'count': {'fr': 'Cette liste contient', 'en': 'This list counts', 'de': 'Diese Liste enthält', 'es': 'Esta lista contiene'},
                    'movies': {'fr': 'films', 'en': 'movies', 'de': 'Filme', 'es': 'películas'},
                    'movie': {'fr': 'film', 'en': 'movie', 'de': 'Film', 'es': 'película'},
                    'present': {'fr': 'déjà présent dans ta vidéothèque a été retiré de la liste.', 'en': 'already in your video library has been removed from the list.', 'de': 'wurde aus der Liste entfernt, weil er in deiner Videothek vorhanden ist.', 'es': 'ha sido eliminada de la lista porque está presente en su videoteca'},
                    'presents': {'fr': 'déjà présents dans ta vidéothèque ont été retirés de la liste.', 'en': 'already in your video library have been removed from the list.', 'de': 'wurden aus der Liste entfernt, weil sie in deiner Videothek vorhanden sind.', 'es': 'han sido eliminadas de la lista porque están presentes en su videoteca '},
                    'none': {'fr': 'Aucun film à ajouter', 'en': 'No film to add', 'de': 'Keine Filme hinzufügen', 'es': 'No hay que añadir ninguna película'},
                    '': {'fr': '', 'en': '', 'de': '', 'es': ''},
                    'space': ' '
                }
                fr.onload = function () {
                    json = fr.result;
                }
                fr.onloadend = function () {
                    content = JSON.parse(json);
                    $(preview).empty();
                    $(infos).empty();
                    $(add).attr('disabled', 'disabled');

                    if (content['total_results']) {
                        for (let i = 0; i < content['total_results']; i++) {
                            let item = content['results'][i];
                            if (!ids.includes(item['movie_db_id'])) {
                                $(preview).append('<div class="result-item"><img src="' + url + item['poster_path'] + '" alt="' + item['title'] + '"><div class="name">' + item['title'] + '</div><div class="check-add" data-id="' + item['id'] + '" data-tmdb="' + item['movie_db_id'] + '"></div></div>');
                                count++;
                            }
                        }
                        $(infos).css('padding', '.5em');
                        let delta = content['total_results'] - count;
                        $(infos).append('<div class="info">' + txt.count[locale] + txt.space + content['total_results'] + txt.space + txt.movies[locale] + '.</div>');
                        if (delta) {
                            $(infos).append('<div class="info">' + delta + txt.space + txt[(delta > 1) ? 'movies' : 'movie'][locale] + txt.space + (delta > 1 ? txt.presents[locale] : txt.present[locale]) + '</div>');
                        }
                        if (count) {
                            $(infos).append(
                                '<div class="select">' +
                                '   <div class="btn-group btn-group-sm" role="group" aria-label="Select - Unselect">' +
                                '       <button name="select-all" type="button" class="btn btn-primary">Select all</button>' +
                                '       <button name="unselect-all" type="button" class="btn btn-secondary">Unselect all</button>' +
                                '   </div>' +
                                '</div>');
                        } else {
                            $(infos).append(
                                '<div class="none">' + txt.none[locale] + '</div>'
                            );
                        }

                        $('.check-add').click(function () {
                            $(this).toggleClass('active');
                        });

                        $('button[name="select-all"]').click(function () {
                            $('.check-add').addClass('active');
                        });

                        $('button[name="unselect-all"]').click(function () {
                            $('.check-add').removeClass('active');
                        });
                        $(add).removeAttr('disabled');
                    }
                }
                fr.readAsText(this.files[0]);
            })
            $('#append-add').click(function () {
                let selected = $('.check-add.active');
                let progress = $('.append-progress');
                let value = $('.value');
                let i, n = selected.length, pv = 0;

                $(progress).css('display', 'flex');
                $(value).css('width', '0%');

                for (i = 0; i < n; i++) {
                    let movie = selected[i];
                    let tmdb_id = $(movie).data('tmdb');
                    let val = (100 * (i / n)).toFixed();
                    console.log(val);

                    $.ajax({
                        url: "{{ path('app_personnel_movie_add') }}",
                        method: 'GET',
                        data: {movie_db_id: tmdb_id, progress_value: val},
                        success: function (data) {
                            pv++;
                            $(value).css('width', (100 * (pv / n)).toFixed() + '%');
                            console.log(data['title'] + ' - ' + data['progress_value'] + '%');

                            if (pv === n) {
                                setTimeout(() => {
                                    console.log("Ajout terminé.");
                                    $(progress).css('display', 'none');
                                    window.location.reload();
                                }, 1000);
                            }
                        }
                    })
                }
            })


            const myModalEl = document.getElementById('exportModal')
            myModalEl.addEventListener('hidden.bs.modal', event => {

                $.ajax({
                    url: "{{ path('app_json_cleanup') }}",
                    method: 'GET',
                    data: {filename: exportFile},
                    success: function (data) {
                        console.log(data['result'])
                    }
                })
            })

            function updateSample(items) {

                let ids = [];
                for (let idx = 0; idx < items.length; idx++) {
                    if ($(items[idx]).hasClass('active')) {
                        ids.push($(items[idx]).data('movie-id'));
                    }
                }
                if (ids.length === items.length) {
                    ids = [];
                }

                $.ajax({
                    url: "{{ path('app_json_sample') }}",
                    method: 'GET',
                    data: {user_id: user_id, ids: JSON.stringify(ids), filename: exportFile},
                    success: function (data) {
                        $('.sample').html(data['sample']);
                        json = data['json'];
                    }
                })

            }
        })
    </script>
{% endblock %}

